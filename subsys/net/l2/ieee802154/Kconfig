# Copyright (c) 2016 Intel Corporation.
# SPDX-License-Identifier: Apache-2.0

menuconfig NET_L2_IEEE802154
	bool "IEEE 802.15.4 Radio"
	select NET_L2_PHY_IEEE802154
	help
	  Add support for low rate WPAN IEEE 802.15.4 technology.

if NET_L2_IEEE802154

config NET_L2_IEEE802154_MGMT
	bool
	select NET_MGMT
	select NET_MGMT_EVENT

# Virtual configuration option that can be chosen by features that require
# IEEE 802.15.4-2015+ information element (IE) parsing or writing.
config NET_L2_IEEE802154_IE_SUPPORT
	bool

# Virtual configuration option that can be chosen by features that require
# IEEE 802.15.4-2015+ channel hopping.
config NET_L2_IEEE802154_CHANNEL_HOPPING_SUPPORT
	bool

module = NET_L2_IEEE802154
module-dep = NET_LOG
module-str = Log level for IEEE 802.15.4
module-help = Enables IEEE 802.15.4 code to output debug messages.
source "subsys/net/Kconfig.template.log_config.net"

config NET_DEBUG_L2_IEEE802154_DISPLAY_PACKET
	bool "IEEE 802.15.4 packet display"
	depends on NET_LOG
	help
	  Enable printing out in/out 802.15.4 packets. This is extremely
	  verbose, do not enable this unless you know what you are doing.

choice
	prompt "Which packet do you want to print-out?"
	default NET_DEBUG_L2_IEEE802154_DISPLAY_PACKET_FULL
	depends on NET_DEBUG_L2_IEEE802154_DISPLAY_PACKET

config NET_DEBUG_L2_IEEE802154_DISPLAY_PACKET_FULL
	bool "Print-out both RX and TX packets"
	help
	  This will print-out both received and transmitted packets.

config NET_DEBUG_L2_IEEE802154_DISPLAY_PACKET_RX
	bool "Print-out only RX packets"
	help
	  This will print-out received packets only.

config NET_DEBUG_L2_IEEE802154_DISPLAY_PACKET_TX
	bool "Print-out only TX packets"
	help
	  This will print-out transmitted packets only.

endchoice

config NET_L2_IEEE802154_IMPLICIT_BROADCAST
	bool "IEEE 802.15.4 implicit broadcast"
	default y
	help
	  Indicates whether frames without a destination PAN ID and a destination
	  address are to be treated as though they are addressed to the broadcast
	  PAN ID and broadcast short address (MAC PIB attribute: macImplicitBroadcast).
	  Deviating from the standard implicit broadcasts are accepted by default
	  to maintain backwards compatibility.

config NET_L2_IEEE802154_ACK_REPLY
	bool
	select DEPRECATED

choice
	prompt "Device feature level"
	default NET_L2_IEEE802154_RFD
	help
	  Select the IEEE 802.15.4 device feature level.

config NET_L2_IEEE802154_RFD
	bool "Reduced Functionality Device (RFD)"
	help
	  This is the level for an IEEE 802.15.4 end device with minimal
	  resources that is neither a coordinator nor a PAN coordinator. This
	  device profile only supports features required by all IEEE 802.15.4
	  devices such as doing active or passive network scans, as well as
	  associating and disassociating to/from a PAN.

config NET_L2_IEEE802154_FFD
	bool "Full Functionality Device (FFD) [EXPERIMENTAL]"
	select EXPERIMENTAL
	help
	  This is the feature level required for a coordinator or PAN
	  coordinator. A PAN coordinator is allowed to start a network and
	  define network parameters. Both, coordinators and PAN coordinators may
	  associate other devices and distribute short device addresses. Not all
	  FFD features are implemented yet, therefore this option is
	  EXPERIMENTAL.
endchoice

config NET_L2_IEEE802154_SHELL
	bool "IEEE 802.15.4 shell module"
	select SHELL
	select NET_L2_IEEE802154_MGMT
	help
	  This can be used for testing 15.4 through the console via exposing
	  a shell module named "ieee15_4".

config NET_L2_IEEE802154_FRAGMENT
	bool "802.15.4 fragmentation support"
	default y
	depends on NET_6LO
	help
	  If IPv6 packets size more than 802.15.4 MTU, packet is fragmented
	  and reassemble incoming packets according to RFC4944/6282.

if NET_L2_IEEE802154_FRAGMENT

config NET_L2_IEEE802154_FRAGMENT_REASS_CACHE_SIZE
	int "IEEE 802.15.4 Reassembly cache size"
	default 1
	help
	  Simultaneously reassemble 802.15.4 fragments depending on
	  cache size.

config NET_L2_IEEE802154_REASSEMBLY_TIMEOUT
	int "IEEE 802.15.4 Reassembly timeout in seconds"
	default 5
	range 1 60
	help
	  Reassembly timer will start as soon as first packet received
	  from peer. Reassembly should be finished within a given time.
	  Otherwise all accumulated fragments are dropped.

endif # NET_L2_IEEE802154_FRAGMENT

config NET_L2_IEEE802154_SECURITY
	bool "IEEE 802.15.4 security [EXPERIMENTAL]"
	select EXPERIMENTAL
	help
	  Enable 802.15.4 frame security handling, in order to bring data
	  confidentiality and authenticity. The implementation is incomplete
	  (only implicit key mode, no key/device specific state, incoming
	  and outgoing security procedures only partially implemented, etc.).
	  Therefore the feature is to be considered EXPERIMENTAL work in
	  progress.

config NET_L2_IEEE802154_SECURITY_CRYPTO_DEV_NAME
	string "Crypto device name used for <en/de>cryption"
	default ""
	depends on NET_L2_IEEE802154_SECURITY
	help
	  This option should be used to set the crypto device name that
	  IEEE 802.15.4 soft MAC will use to run authentication, encryption and
	  decryption operations on incoming/outgoing frames.

if NET_L2_IEEE802154_IE_SUPPORT
config NET_L2_IEEE802154_TSCH_MAX_ADV_SLOTFRAMES
	int "Maximum number of advertised slotframes that can be received"
	range 1 255
	default 1
	help
	  Defines the maximum number of slotframes that can be received in a
	  beacon from another coordinator.
endif

config NET_L2_IEEE802154_TSCH
	bool "Start the IEEE 802.15.4 L2 in TSCH mode [EXPERIMENTAL]"
	select EXPERIMENTAL
	depends on NET_TIME_REFERENCE_CLOCK
	select NET_L2_IEEE802154_IE_SUPPORT
	select NET_L2_IEEE802154_CHANNEL_HOPPING_SUPPORT
	select NET_PKT_TXTIME
	# requires macTimestampSupported,
	# see IEEE 802.15.4-2020, section 6.5.4.3
	select NET_PKT_TIMESTAMP
	help
	  Start the 802.15.4 L2 driver in TSCH (time slotted channel hopping)
	  mode (MAC PIB attribute: macTschEnabled). This is EXPERIMENTAL work
	  in progress.

if NET_L2_IEEE802154_TSCH

config NET_L2_IEEE802154_TSCH_STACK_SIZE
	int "IEEE 802.15.4 TSCH operation stack size"
	default 800
	help
	  Sets the stack size of the thread operating TSCH slotframes.

config NET_L2_IEEE802154_MAX_NEIGHBORS
	int "The maximum number of neighbors reachable from a IEEE 802.15.4 node"
	default 8
	range 1 254
	help
	  The value depends on your network needs. Currently only the TSCH
	  protocol stores per-neighbour information.

endif # NET_L2_IEEE802154_TSCH

# Hidden option enabled when an IEEE 802.15.4 neighbour cache is required.
config NET_L2_IEEE802154_NBR_CACHE
	bool
	default y if NET_L2_IEEE802154_TSCH

source "subsys/net/l2/ieee802154/Kconfig.radio"

endif
